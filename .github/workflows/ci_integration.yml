name: CI Integration

on:
  workflow_dispatch:
  push:
    branches: [ main ]

jobs:
  integration:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Start docker-compose stack
        run: |
          docker-compose -f docker-compose.dev.yml up -d
      - name: Wait for Postgres
        run: |
          for i in `seq 1 30`; do
            docker-compose -f docker-compose.dev.yml exec -T postgres pg_isready -U kruth && exit 0 || sleep 2
          done
          echo "Postgres not ready"; exit 1
      - name: Bootstrap DB and topics
        run: |
          bash scripts/bootstrap_demo.sh
      - name: Install runtime deps
        run: |
          python -m pip install --upgrade pip
          pip install psycopg2-binary pandas scikit-learn joblib kafka-python
      - name: Train logistic model
        run: |
          python models/train_logistic.py
      - name: Start consumer in background
        run: |
          nohup python ingestion/stream_processor.py &
      - name: Produce demo events
        run: |
          python ingestion/kafka_producer.py --count 20 --rate 20
      - name: Check risk_scores row count
        run: |
          sleep 5
          docker-compose -f docker-compose.dev.yml exec -T postgres psql -U kruth -d credit_risk -c "SELECT count(*) FROM risk_scores;" | tee /tmp/rs_count
          cat /tmp/rs_count
          if ! grep -q "count" /tmp/rs_count; then exit 1; fi
